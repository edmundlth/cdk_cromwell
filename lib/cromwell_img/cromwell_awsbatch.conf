include required(classpath("application"))

webservice {
  interface = 0.0.0.0
  port = 8000
}

system {
  job-rate-control {
    jobs = 1
    per = 2 second
  }
}

aws {
  application-name = "cromwell"
  auths = [
  {
      name = "default"
      scheme = "custom_keys"
      access-key =
      secret-key =
  },
  ]
  region = "ap-southeast-2"
}

engine { filesystems { s3 { auth = "default" } } }

backend {
  default = "AWSBATCH"
  providers {
    AWSBATCH {
      actor-factory = "cromwell.backend.impl.aws.AwsBatchBackendLifecycleActorFactory"
      config {
        numSubmitAttempts = 10
        numCreateDefinitionAttempts = 10
        root = "s3://genovic-qc-cromwell-root/cromwell-execution"
        auth = "default"
        default-runtime-attributes {
            queueArn = "arn:aws:batch:ap-southeast-2:562965587442:job-queue/default-ee787980-caf2-11e9-8bba-06b4de3fdf3e"
        }
        filesystems { s3 { auth = "default" } }
        slow-job-warning-time: 24 hours
      }
    }
  }
}

workflow-options {
    workflow-log-dir = "cromwell-workflow-logs"
    workflow-log-temporary = false
}


call-caching {
  enabled = true
  invalidate-bad-cache-results = true
}

database {
  # mysql
  driver = "slick.driver.MySQLDriver$"

  # see all possible parameters and default values here:
  # http://slick.lightbend.com/doc/3.2.0/api/index.html#slick.jdbc.JdbcBackend$DatabaseFactoryDef@forConfig(String,Config,Driver):Database
  db {
    driver = "com.mysql.jdbc.Driver"
    url = "jdbc:mysql://host/cromwell?rewriteBatchedStatements=true"
    user = "admin"
    password = ""
    connectionTimeout = 5000
  }

  # For batch inserts the number of inserts to send to the DB at a time
  # insert-batch-size = 2000

  migration {
    # For databases with a very large number of symbols, selecting all the rows at once can generate a variety of
    # problems. In order to avoid any issue, the selection is paginated. This value sets how many rows should be
    # retrieved and processed at a time, before asking for the next chunk.
    #read-batch-size = 100000

    # Because a symbol row can contain any arbitrary wdl value, the amount of metadata rows to insert from a single
    # symbol row can vary from 1 to several thousands (or more). To keep the size of the insert batch from growing out
    # of control we monitor its size and execute/commit when it reaches or exceeds writeBatchSize.
    #write-batch-size = 100000
  }

  # To customize the metadata database connection, create a block under `database` with the metadata database settings.
  #
  # For example, the default database stores all data in memory. This commented out block would store `metadata` in an
  # hsqldb file, without modifying the internal engine database connection.
  #
  # The value `${uniqueSchema}` is always replaced with a unqiue UUID on each cromwell startup.
  #
  # This feature should be considered experimental and likely to change in the future.

  #metadata {
  #  profile = "slick.jdbc.HsqldbProfile$"
  #  db {
  #    driver = "org.hsqldb.jdbcDriver"
  #    url = "jdbc:hsqldb:file:metadata-${uniqueSchema};shutdown=false;hsqldb.tx=mvcc"
  #    connectionTimeout = 3000
  #  }
  #}
}
